stats_file=$1

#add 2 sets of STAR outputs together (to pick up full mapping of --split-3 case) 
cat $stats_file | perl -ne 'chomp; $f=$_; if($f=~/study/i) { print "$f\tboth_input_read_counts\tall_bases\n"; next; } $f="1\t$f"; @f=split(/\t/,$f); $both_input_read_counts=$f[64].":".$f[65]; $all_bases=($f[64]*$f[46]) + ($f[65]*$f[47]); $f[44]+=$f[45]; $f[46]=$f[46].":".$f[47]; $f[64]+=$f[65]; if($f[89] > 0) { $f[88]=sprintf("%.0f",100*(($f[90]+$f[91])/$f[64])); } $f[90]+=$f[91]; shift(@f); print "".join("\t",@f)."\t$both_input_read_counts\t$all_bases\n";' | cut -f 1,2-6,14,24,31,44,46,64,88,90,92,93 | perl -ne 'chomp; $f=$_; @f=split(/\t/,$f); $study=shift(@f); $run=shift(@f); print "$study\t$run"; $t=$f[3]; $f[3]=$f[6]; $f[6]=$t; $t=$f[4]; $f[4]=$f[10]; $f[10]=$t; if($study=~/study/i) { print "\tall_reads_mapped_%\tall_bases_mapped_%"; print "\t".join("\t",@f)."\n"; next; } $bcp=0; if($f[13] > 0 ) { $bcp=100*($f[6]/($f[13])); } $amp=100*($f[7]/$f[9]); printf("\t%.0f\t%.0f\t".join("\t",@f)."\n",$amp,$bcp);' > ${stats_file}.small
